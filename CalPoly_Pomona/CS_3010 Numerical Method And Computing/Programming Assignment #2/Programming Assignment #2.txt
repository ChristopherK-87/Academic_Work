Write a program that asks the user for the number of linear equations to solve (letâ€™s say n <=10) using the following 
two methods. Please make sure that the linear equations satisfy the criteria of strictly diagonally dominant so that 
these methods converge. These methods will surely give a solution if this condition is met but might also give solutions 
to linear equations that don't meet this criteria.


1) Jacobi iterative method

2) Gauss-Seidel method (again, the user has to enter the desired error that will be used for stopping condition).


Ask the user to first enter the number of equations and then give them the choice to enter the coefficients from the 
command line (by asking for each row that includes the b value) or have them enter a file name which has the augmented 
coefficient matrix (including the b values) in a simple text file format as seen below for an example of 3 equations, similar 
to Project 1: E.g. the contents of a file for 3 linear equations 5x-y = 7, -x+3y-z=4, -y+2z=5 will be

5 -1 0 7

-1 3 -1 4

0 -1 2 5


After reading in the equation data, ask the user to enter the desired stopping error. The user is then asked to enter the 
starting solution for the iterative methods, e.g. for the above equations, it could be

0 0 0

For both the iterative methods, calculate the L2 norm after each iteration and when this value is less than the error the user 
specified, then stop the iterations. 

Print the x column vector (in the row format) after each iteration. If the iterative methods don't achieve the desired error 
in 50 iterations, end the iterative method and mention that the error was not reached and print the values at the 50th iteration 
as the final solution.

The output of your program should be the solution at each iteration in the following format:

[2.0870 3.4348 4.2174]

Include a report that shows the screenshot of execution of your program for two different sample set of linear equations. 

Upload your code and and report in Canvas. 

Please make sure the report is in PDF format.

Grading: 25 points for each method working correctly and printing out the error correctly at each iteration.